{"version":3,"sources":["Components/Checkbox.js","Components/Button.js","Components/List.js","Components/Input.js","Components/Progressbar.js","Container/Tasks.js","Components/ItemCategory.js","Container/Categories.js","Container/FilterForm.js","App.js","index.js"],"names":["Checkbox","_ref","checked","value","type","action","react_default","a","createElement","className","onChange","Button","title","onClick","List","checks","map","item","id","key","Components_Checkbox","isChecked","Components_Button","Input","placeholder","Progressbar","current","total","style","width","concat","Tasks","state","handleChange","e","_this","setState","target","handleSubmit","preventDefault","i","includes","alert","Object","toConsumableArray","handleCheckbox","_this$state","this","Fragment","Components_Progressbar","filter","length","Components_Input","Components_List","Component","ItemCategory","items","Categories","console","log","handleAddCategories","Components_ItemCategory","FilterForm","handleFilter","App","Container_FilterForm","Container_Categories","Container_Tasks","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.edbe7cbb.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/Checkbox.css';\n\nconst Checkbox = ({checked, value, type, action}) => {\n    return (\n        <div className=\"checkbox\">\n            <input type={type}\n                   checked={checked}\n                   value={value}\n                   onChange={action}/>{value}\n        </div>\n    );\n};\n\nexport default Checkbox;","import React from 'react';\nimport '../style/Button.css'\n\nconst Button = ({action, title}) => {\n    return (\n        <button\n            className='button'\n            onClick={action}>{title}\n        </button>\n    )\n};\n\nexport default Button;","import React from 'react';\nimport '../style/List.css'\nimport Checkbox from \"./Checkbox\";\nimport Button from \"./Button\";\n\nconst List = ({action, checks}) => (\n    <ul className='list'>\n        {checks.map((item, id) =>\n            <li className='item'\n                key={id}>\n                <Checkbox type={\"checkbox\"}\n                          checked={item.isChecked}\n                          value={item.value}\n                          action={action}\n                />\n                <Button action={action}\n                        title={'\\u270E'}\n                        className='plus'/>\n            </li>\n        )}\n    </ul>\n);\n\nexport default List;","import React from 'react';\nimport '../style/Input.css';\n\nconst Input = ({type, value, placeholder, action}) => {\n    return (\n        <div className=\"\">\n            <input type={type}\n                   value={value}\n                   className='input'\n                   placeholder={placeholder}\n                   onChange={action}\n            />\n\n        </div>\n    );\n};\n\nexport default Input;","import React from 'react';\nimport '../style/Progressbar.css';\n\nconst Progressbar = ({current, total}) =>\n    <div className='progress-bar'>\n        <div className=\"filler\"\n             style={{width:`${current / total * 100}%`}}>\n        </div>\n    </div>;\n\nexport default Progressbar;\n\n","import React, {Component} from 'react';\nimport List from \"../Components/List\";\nimport Button from \"../Components/Button\";\nimport Input from \"../Components/Input\";\nimport Progressbar from \"../Components/Progressbar\";\nimport '../style/Tasks.css'\n\nclass Tasks extends Component {\n    state = {\n        value: '',\n        checks: [\n            {value: \"banana\", isChecked: false},\n            {value: \"apple\", isChecked: false},\n            {value: \"mango\", isChecked: false},\n            {value: \"grape\", isChecked: false}\n        ]\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const isExistTask = this.state.checks.map(i => i.value).includes(this.state.value);\n        if (!isExistTask) {\n            this.setState({\n                value: '',\n                checks: [...this.state.checks, {\n                    value: this.state.value, isChecked: false,\n                }\n                ],\n            });\n        } else {\n            alert('Add task please or check existed task!');\n        }\n    };\n\n    handleCheckbox = (e) => {\n        let checks = this.state.checks.map(i => {\n            if (i.value === e.target.value) i.isChecked = !i.isChecked;\n            return i;\n        });\n        this.setState({\n            checks,\n        });\n    };\n\n    render() {\n        const {checks, value} = this.state;\n        return (\n            <>\n                <div className='tasks-container'>\n\n                    <Progressbar\n                        current={(checks).filter(i => i.isChecked === true).length}\n                        total={checks.length}\n                    />\n\n                    <div className='form-tasks-wrapper'>\n                        <form className='form'>\n                            <Input type={'text'}\n                                   placeholder={'Text input with button'}\n                                   value={value}\n                                   action={this.handleChange}\n                            />\n                        </form>\n                        <Button action={this.handleSubmit}\n                                title={\"Add\"}\n                        />{\" \"}\n                    </div>\n\n                    <List checks={checks}\n                          action={this.handleCheckbox}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Tasks;","import React from 'react';\nimport Button from \"./Button\";\nimport '../style/ItemCategory.css';\n\nconst ItemCategory = ({items, action}) => {\n    return (\n        <ul className='list'>\n            {items.map((item, id) =>\n                <li className='item'\n                    key={id}>{item}\n                    <div className='btns'>\n                        <Button action={action}\n                                title={'\\u270E'}/>\n                        <Button action={action}\n                                title={'x'}/>\n                        <Button action={action}\n                                title={'+'}/>\n                    </div>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default ItemCategory;","import React, {Component} from 'react';\nimport Input from \"../Components/Input\";\nimport Button from \"../Components/Button\";\nimport '../style/Categories.css';\nimport ItemCategory from \"../Components/ItemCategory\";\n\nclass Categories extends Component {\n    state = {\n        value: \"\",\n        items: []\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value,\n        });\n        console.log(e.target.value);\n    };\n\n    handleAddCategories = (e) => {\n        e.preventDefault();\n        if (this.state.value) {\n            this.setState({\n                value: '',\n                items: [...this.state.items, this.state.value],\n            });\n        }else {\n            alert('Add task please!');\n        }\n\n    };\n\n    render() {\n        const {items, value} = this.state;\n        return (\n            <>\n                <div className='category-container'>\n                    <div className='form-category-wrapper'>\n                        <form>\n                            <Input type={'text'}\n                                   placeholder={'Enter category title'}\n                                   value={value}\n                                   action={this.handleChange}\n                            />\n                        </form>\n                        <Button action={this.handleAddCategories}\n                                title={\"Add\"}\n                        />\n                    </div>\n                    <ItemCategory items={items}\n                                  // action={this.handleSubListCategory}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Categories;","import React, {Component} from 'react';\nimport Input from \"../Components/Input\";\n\nclass FilterForm extends Component {\n    state = {\n        filter: ''\n    };\n\n    handleFilter = () => {\n\n    };\n\n    render() {\n        return (\n            <div>\n                <Input type={'text'}\n                       placeholder={'Search'}\n                       value={this.state.filter}\n                       action={this.handleFilter}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FilterForm;","import React, {Component} from 'react';\nimport './style/App.css';\nimport Tasks from \"./Container/Tasks\";\nimport Categories from \"./Container/Categories\";\nimport FilterForm from \"./Container/FilterForm\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <div className='header'>\n                    <h1>To Do List</h1>\n                    <FilterForm/>\n                </div>\n\n                <div className='component-container'>\n                    <Categories/>\n                    <Tasks/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}